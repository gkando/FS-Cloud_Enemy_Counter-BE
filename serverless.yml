service: fs-enemy-counter-service

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-north-1
  stage: dev
  apiGateway:
    apiKeys:
      - eventSubmitKey
  websocketsApiName: fs-enemy-counter-ws
  lambdaHashingVersion: 20201221
  resourcePolicy:
    - Effect: Allow
      Principal: "*"
      Action: execute-api:Invoke
      Resource:
        - execute-api:/*/*/*

custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}

functions:
  PostKills:
    handler: api/post.handler
    memorySize: 128
    description: Handle submission of new enemy kills from game server.
    events:
      - http:
          path: kills
          method: post
          private: true
          cors: true
    environment:
      PLAYER_KILLS_TABLE: !Ref PlayerKillsTable
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:BatchWriteItem
        Resource: !GetAtt PlayerKillsTable.Arn
  streamProcessor:
    handler: api/stream-processor.update
    description: Streams event processor for PlayerKillsTable. Adds new kills to the TotalsTable.
    events:
      - stream:
          type: dynamodb
          arn: !GetAtt PlayerKillsTable.StreamArn
          batchSize: 100
          maximumRetryAttempts: 10
          enabled: true
    environment:
      TOTAL_KILLS_TABLE: !Ref TotalKillsTable
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:BatchWriteItem
        Resource: !GetAtt TotalKillsTable.Arn
  GetKills:
    handler: api/get.handler
    events:
      - http:
          path: totals
          method: get
          cors: true
    environment:
      TOTAL_KILLS_TABLE: !Ref TotalKillsTable
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:Scan
        Resource: !GetAtt TotalKillsTable.Arn
  WsHandler:
    handler: api/ws-connect.handler
    events:
      - websocket:
          route: $connect
      - websocket:
          route: $default
      - websocket:
          route: $disconnect
    environment:
      CONNECTIONS_TABLE: !Ref ConnectionsTable
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:GetItem
          - dynamodb:DeleteItem
          - dynamodb:Query
          - dynamodb:Scan
        Resource: !GetAtt ConnectionsTable.Arn
  WsBroadcast:
    handler: api/ws-broadcast.update
    events:
      - stream:
          type: dynamodb
          arn: !GetAtt TotalKillsTable.StreamArn
          batchSize: 100
          maximumRetryAttempts: 10
          enabled: true
    environment:
      CONNECTIONS_TABLE: !Ref ConnectionsTable
      TOTAL_KILLS_TABLE: !Ref TotalKillsTable
      API_GATEWAY_ENDPOINT:
        Fn::Join:
          - ""
          - - "https://"
            - Ref: WebsocketsApi
            - ".execute-api.${self:custom.region}.amazonaws.com/${self:custom.stage}"
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:Query
          - dynamodb:Scan
        Resource: !GetAtt TotalKillsTable.Arn
      - Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:Query
          - dynamodb:Scan
        Resource: !GetAtt ConnectionsTable.Arn
resources:
  Resources:
    PlayerKillsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        StreamSpecification:
          StreamViewType: NEW_IMAGE
        AttributeDefinitions:
          - AttributeName: playerId
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: S
        KeySchema:
          - AttributeName: playerId
            KeyType: HASH
          - AttributeName: timestamp
            KeyType: RANGE
    TotalKillsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
    ConnectionsTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: connectionId
            AttributeType: S
        KeySchema:
          - AttributeName: connectionId
            KeyType: HASH

  Outputs:
    PlayerKillsTableName:
      Value: !Ref PlayerKillsTable
      Description: "DynamoDB table"
    TotalKillsTableName:
      Value: !Ref TotalKillsTable
      Description: "Total Kills from Player Kills Table"
    ConnectionsTableName:
      Value: !Ref ConnectionsTable
      Description: "Connected WS Clients"

plugins:
  - serverless-iam-roles-per-function
